
import { CommandResult } from './types';
import { generateImageWithGemini } from '@/services/apiService';
import { toast } from 'sonner';

export const imageCommand = async (prompt: string): Promise<CommandResult> => {
  if (!prompt) {
    return { 
      content: "A co jako m√°m vygenerovat? Zadej popis obr√°zku, ty chytrol√≠ne! üñºÔ∏è", 
      type: 'error' 
    };
  }
  
  try {
    // Zaƒç√°tek generov√°n√≠ - informovat u≈æivatele
    toast.info("Generuji obr√°zek, m≈Ø≈æe to chv√≠li trvat...");
    
    const imageData = await generateImageWithGemini(prompt);
    
    return {
      content: `## Vygenerovan√Ω obr√°zek üñºÔ∏è\n\n### Zad√°n√≠: "${prompt}"\n\n![${prompt}](${imageData})`,
      type: 'image',
      data: { imageUrl: imageData, prompt }
    };
  } catch (error) {
    console.error('Error generating image:', error);
    return {
      content: `Nepoda≈ôilo se vygenerovat obr√°zek: ${error instanceof Error ? error.message : "Nezn√°m√° chyba"}. Zkus to znovu s jin√Ωm zad√°n√≠m. ü§î`,
      type: 'error'
    };
  }
};
